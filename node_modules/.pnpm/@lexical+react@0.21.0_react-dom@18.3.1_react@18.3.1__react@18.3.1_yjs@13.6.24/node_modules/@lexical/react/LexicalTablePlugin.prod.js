/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';var b=require("@lexical/react/LexicalComposerContext"),t=require("@lexical/table"),u=require("@lexical/utils"),v=require("lexical"),w=require("react"),x;function z(n){let p=new URLSearchParams;p.append("code",n);for(let q=1;q<arguments.length;q++)p.append("v",arguments[q]);throw Error(`Minified Lexical error #${n}; visit https://lexical.dev/docs/error?${p} for the full message or `+"use the non-minified dev environment for full errors and additional helpful warnings.");}
x=z&&z.__esModule&&Object.prototype.hasOwnProperty.call(z,"default")?z["default"]:z;
exports.TablePlugin=function({hasCellMerge:n=!0,hasCellBackgroundColor:p=!0,hasTabHandler:q=!0,hasHorizontalScroll:y=!1}){let [g]=b.useLexicalComposerContext();w.useEffect(()=>{t.setScrollableTablesActive(g,y)},[g,y]);w.useEffect(()=>{g.hasNodes([t.TableNode,t.TableCellNode,t.TableRowNode])||x(10);return u.mergeRegister(g.registerCommand(t.INSERT_TABLE_COMMAND,({columns:a,rows:d,includeHeaders:k})=>{a=t.$createTableNodeWithDimensions(Number(d),Number(a),k);u.$insertNodeToNearestRoot(a);a=a.getFirstDescendant();
v.$isTextNode(a)&&a.select();return!0},v.COMMAND_PRIORITY_EDITOR),g.registerNodeTransform(t.TableNode,a=>{let [d]=t.$computeTableMapSkipCellCheck(a,null,null),k=d.reduce((e,f)=>Math.max(e,f.length),0);a=a.getChildren();for(let e=0;e<d.length;++e){let f=a[e];if(f){var h=d[e].reduce((c,l)=>l?1+c:c,0);if(h!==k)for(;h<k;++h){let c=t.$createTableCellNode(0);c.append(v.$createParagraphNode());f.append(c)}}}}))},[g]);w.useEffect(()=>{let a=new Map,d=(h,e,f)=>{f=t.getTableElement(h,f);h=t.applyTableHandlers(h,
f,g,q);a.set(e,[h,f])},k=g.registerMutationListener(t.TableNode,h=>{g.getEditorState().read(()=>{for(const [e,f]of h){const c=a.get(e);if("created"===f||"updated"===f){const {tableNode:l,tableElement:m}=t.$getTableAndElementByKey(e);void 0===c?d(l,e,m):m!==c[1]&&(c[0].removeListeners(),a.delete(e),d(l,e,m))}else"destroyed"===f&&void 0!==c&&(c[0].removeListeners(),a.delete(e))}},{editor:g})},{skipInitialization:!1});return()=>{k();for(let [,[h]]of a)h.removeListeners()}},[g,q]);w.useEffect(()=>{if(!n)return g.registerNodeTransform(t.TableCellNode,
a=>{if(1<a.getColSpan()||1<a.getRowSpan()){var [,,d]=t.$getNodeTriplet(a);[a]=t.$computeTableMap(d,a,a);let h=a.length,e=a[0].length;d=d.getFirstChild();t.$isTableRowNode(d)||x(175);let f=[];for(let c=0;c<h;c++){0!==c&&(d=d.getNextSibling(),t.$isTableRowNode(d)||x(175));let l=null;for(let m=0;m<e;m++){var k=a[c][m];let r=k.cell;if(k.startRow===c&&k.startColumn===m)l=r,f.push(r);else if(1<r.getColSpan()||1<r.getRowSpan())t.$isTableCellNode(r)||x(176),k=t.$createTableCellNode(r.__headerState),null!==
l?l.insertAfter(k):u.$insertFirst(d,k)}}for(let c of f)c.setColSpan(1),c.setRowSpan(1)}})},[g,n]);w.useEffect(()=>{if(!p)return g.registerNodeTransform(t.TableCellNode,a=>{null!==a.getBackgroundColor()&&a.setBackgroundColor(null)})},[g,p,n]);return null}
